<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="56659fc1-b179-45e9-b642-0e14a3c82ad4" name="Default Changelist" comment="" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/README.ipynb">
          <provider selected="true" editor-type-id="jupyter-editor" />
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
        <option value="Jupyter Notebook" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>print(</find>
      <find>static</find>
      <find>predict</find>
      <find>if self.model</find>
      <find>logistic(</find>
      <find>fit</find>
      <find>print</find>
      <find>GLM</find>
      <find>classif</find>
      <find>Node(</find>
      <find>cutoff</find>
      <find>parent</find>
      <find>left</find>
      <find>fit(</find>
      <find>classifi</find>
      <find>.idxmax()</find>
      <find>predic</find>
      <find>self.isf</find>
      <find>classification</find>
      <find>value_c</find>
      <find>majority_</find>
    </findStrings>
    <replaceStrings>
      <replace>fit(</replace>
    </replaceStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/svc.py" />
        <option value="$PROJECT_DIR$/linear-svm.py" />
        <option value="$PROJECT_DIR$/linear-regression.py" />
        <option value="$PROJECT_DIR$/linear-svc.py" />
        <option value="$PROJECT_DIR$/pca.py" />
        <option value="$PROJECT_DIR$/GLM.py" />
        <option value="$PROJECT_DIR$/glm.py" />
        <option value="$PROJECT_DIR$/diagnostics.py" />
        <option value="$PROJECT_DIR$/decision_tree_classifier.py" />
        <option value="$PROJECT_DIR$/random_forest_classifier.py" />
        <option value="$PROJECT_DIR$/python/decision_tree_classifier.py" />
        <option value="$PROJECT_DIR$/python/glm.py" />
        <option value="$PROJECT_DIR$/python/linear-regression.py" />
        <option value="$PROJECT_DIR$/python/linear-svc.py" />
        <option value="$PROJECT_DIR$/python/random_forest_classifier.py" />
        <option value="$PROJECT_DIR$/readme.ipynb" />
        <option value="$PROJECT_DIR$/README.ipynb" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="width" value="1440" />
    <option name="height" value="877" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="ML-Algorithms" type="b2602c69:ProjectViewProjectNode" />
              <item name="ML-Algorithms" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ML-Algorithms" type="b2602c69:ProjectViewProjectNode" />
              <item name="ML-Algorithms" type="462c0819:PsiDirectoryNode" />
              <item name="python" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Python.random_forest_classifier">
    <configuration name="GLM" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="ML-Algorithms" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/glm.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="decision_tree_classifier" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="ML-Algorithms" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/decision_tree_classifier.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="linear-regression" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="ML-Algorithms" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/linear-regression.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="linear-svc" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="ML-Algorithms" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/linear-svc.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="random_forest_classifier" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="ML-Algorithms" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/random_forest_classifier.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.random_forest_classifier" />
        <item itemvalue="Python.decision_tree_classifier" />
        <item itemvalue="Python.GLM" />
        <item itemvalue="Python.linear-regression" />
        <item itemvalue="Python.linear-svc" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="56659fc1-b179-45e9-b642-0e14a3c82ad4" name="Default Changelist" comment="" />
      <created>1592606682393</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1592606682393</updated>
      <workItem from="1592606688430" duration="792000" />
      <workItem from="1592662300668" duration="10522000" />
      <workItem from="1593291388917" duration="3629000" />
      <workItem from="1593773324473" duration="158000" />
      <workItem from="1594411518086" duration="38691000" />
      <workItem from="1594655768670" duration="501000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="54293000" />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="0" width="1440" height="900" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.26752505" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Jupyter" visible="true" weight="0.32941177" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" weight="0.32941177" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.47320262" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" weight="0.32941177" />
      <window_info anchor="bottom" id="Docker" order="7" show_stripe_button="false" />
      <window_info anchor="bottom" id="Version Control" order="8" weight="0.32941177" />
      <window_info anchor="bottom" id="Database Changes" order="9" />
      <window_info anchor="bottom" id="Event Log" order="10" side_tool="true" />
      <window_info anchor="bottom" id="Terminal" order="11" weight="0.32941177" />
      <window_info anchor="bottom" id="Python Console" order="12" weight="0.32941177" />
      <window_info anchor="right" id="Commander" order="0" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="SciView" order="3" visible="true" weight="0.3297568" />
      <window_info anchor="right" id="R Graphics" order="4" />
      <window_info anchor="right" id="R Packages" order="5" />
      <window_info anchor="right" id="Database" order="6" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <default-breakpoints>
        <breakpoint type="python-exception">
          <properties notifyOnTerminate="true" exception="BaseException">
            <option name="notifyOnTerminate" value="true" />
          </properties>
        </breakpoint>
      </default-breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/ML_Algorithms$diagnostics.coverage" NAME="diagnostics Coverage Results" MODIFIED="1594413553961" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/ML_Algorithms$linear_svc.coverage" NAME="linear-svc Coverage Results" MODIFIED="1594414872471" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/ML_Algorithms$GLM.coverage" NAME="GLM Coverage Results" MODIFIED="1594496935068" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/ML_Algorithms$pca.coverage" NAME="pca Coverage Results" MODIFIED="1593429249674" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/ML_Algorithms$decision_tree_classifier.coverage" NAME="decision_tree_classifier Coverage Results" MODIFIED="1594600086286" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/ML_Algorithms$random_forest_classifier.coverage" NAME="random_forest_classifier Coverage Results" MODIFIED="1594600319012" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/ML_Algorithms$linear_regression.coverage" NAME="linear-regression Coverage Results" MODIFIED="1594489926736" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
  <component name="debuggerHistoryManager">
    <expressions id="evaluateCodeFragment">
      <expression>
        <expression-string>x = df.iloc[:, 0:self.x.shape[1]].reset_index(drop=True)
y = df.target.reset_index(drop=True)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>features_to_use = random.sample(list(range(curr.features.shape[1])),
                                num_features_to_use)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>num_features_to_use = random.choice(list(range(1, self.x.shape[1])))
features_to_use = random.sample(list(range(self.x.shape[1])),
                                num_features_to_use)
df = self.df.sample(frac=1)
x = df.iloc[:, 0:self.x.shape[1]][df.columns[features_to_use]].reset_index(drop=False)
y = df.target.reset_index(drop=True)
tree = Tree(self.max_depth, x, y)
mod = tree.fit()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>num_features_to_use = random.choice(list(range(1, self.x.shape[1])))
features_to_use = random.sample(list(range(self.x.shape[1])),
                                num_features_to_use)
df = self.df.sample(frac=1)
x = df.iloc[:, 0:self.x.shape[1]][df.columns[features_to_use]].reset_index(drop=False)
y = df.target.reset_index(drop=True)
tree = Tree(self.max_depth, x, y)
mod = tree.fit()
preds = pd.concat([x.index, pd.Series(mod.predict(x, self.y))])</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>l = x.iloc[:, col] &lt; cutoff
r = x.iloc[:, col] &gt;= cutoff
ly = y_true[l]
ry = y_true[r]
lx = x[l].drop(x.columns[col], axis = 1)
rx = x[r].drop(x.columns[col], axis = 1)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>l = x.iloc[:, col] &lt; cutoff
r = x.iloc[:, col] &gt;= cutoff</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>tree = Tree(self.max_depth, x, y)
mod = tree.fit()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>x = df.iloc[:, 0:self.x.shape[1]][df.columns[features_to_use]]
y = df.target</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>num_features_to_use = random.choice(list(range(1, self.x.shape[1])))
features_to_use = random.sample(list(range(self.x.shape[1])),
                                num_features_to_use)
df = self.df.sample(frac=1)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
    </expressions>
    <expressions id="watch">
      <expression>
        <expression-string>curr.classification</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
    <expressions id="evaluateExpression">
      <expression>
        <expression-string>np.where(preds.mean(axis=1) &gt; threshold, 1, 0)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>preds.mean(axis=1)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>curr.right</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>curr</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>curr.features</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>len(curr.target)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>len(curr.y)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>len(curr.features)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>ry</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/svc.py" />
    <entry file="file://$USER_HOME$/Library/Python/3.7/lib/python/site-packages/sklearn/utils/validation.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="140">
          <caret line="61" selection-start-line="61" selection-end-line="61" />
        </state>
      </provider>
    </entry>
    <entry file="file:///Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pandas/core/indexes/base.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="21">
          <caret line="896" selection-start-line="896" selection-end-line="896" />
        </state>
      </provider>
    </entry>
    <entry file="file:///Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/copy.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="140">
          <caret line="137" selection-start-line="137" selection-end-line="137" />
        </state>
      </provider>
    </entry>
    <entry file="file://$APPLICATION_HOME_DIR$/helpers/pydev/_pydev_imps/_pydev_execfile.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="357">
          <caret line="17" selection-start-line="17" selection-end-line="17" />
        </state>
      </provider>
    </entry>
    <entry file="file:///Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pandas/core/indexing.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="140">
          <caret line="1463" selection-start-line="1463" selection-end-line="1463" />
        </state>
      </provider>
    </entry>
    <entry file="file:///Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pandas/core/generic.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="140">
          <caret line="4369" selection-start-line="4369" selection-end-line="4369" />
        </state>
      </provider>
    </entry>
    <entry file="file:///Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pandas/core/internals.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="254">
          <caret line="4842" selection-start-line="4842" selection-end-line="4842" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/pca.py" />
    <entry file="file:///Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pandas/core/frame.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="140">
          <caret line="4068" selection-start-line="4068" selection-end-line="4068" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/diagnostics.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="76">
          <caret line="69" column="21" selection-start-line="69" selection-start-column="21" selection-end-line="69" selection-end-column="21" />
          <folding>
            <element signature="e#0#18#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file:///Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/codecs.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="175">
          <caret line="311" selection-start-line="311" selection-end-line="311" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/random_forest_classifier.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="987">
          <caret line="47" column="53" lean-forward="true" selection-start-line="47" selection-start-column="53" selection-end-line="47" selection-end-column="53" />
          <folding>
            <element signature="e#0#19#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/decision_tree_classifier.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="258">
          <caret line="196" column="17" lean-forward="true" selection-start-line="196" selection-start-column="17" selection-end-line="196" selection-end-column="17" />
          <folding>
            <element signature="e#0#19#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/linear-regression.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="945">
          <caret line="45" column="29" selection-start-line="45" selection-start-column="29" selection-end-line="45" selection-end-column="29" />
          <folding>
            <element signature="e#0#19#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/glm.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="21">
          <caret line="67" selection-start-line="67" selection-end-line="67" />
          <folding>
            <element signature="e#0#19#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/linear-svc.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="21">
          <caret line="7" selection-start-line="7" selection-end-line="7" />
          <folding>
            <element signature="e#0#28#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/python/decision_tree_classifier.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="84">
          <caret line="4" column="11" lean-forward="true" selection-start-line="4" selection-start-column="11" selection-end-line="4" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/python/diagnostics.py">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <folding>
            <element signature="e#0#18#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/python/glm.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="84">
          <caret line="4" column="11" lean-forward="true" selection-start-line="4" selection-start-column="11" selection-end-line="4" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/python/linear-regression.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="105">
          <caret line="5" column="12" selection-start-line="5" selection-start-column="12" selection-end-line="5" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/python/linear-svc.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="105">
          <caret line="5" column="12" selection-start-line="5" selection-start-column="12" selection-end-line="5" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/python/random_forest_classifier.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="42">
          <caret line="2" column="18" lean-forward="true" selection-start-line="2" selection-start-column="18" selection-end-line="2" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/README.ipynb">
      <provider selected="true" editor-type-id="jupyter-editor" />
    </entry>
  </component>
</project>